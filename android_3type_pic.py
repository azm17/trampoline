# -*- coding: utf-8 -*-
"""
Created on Sun Dec 15 00:59:22 2019

@author: 50516010
"""

import numpy as np
import matplotlib.pyplot as plt

def create_jumping_android(dpi):
    array = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0],
             [0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
             [0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0],
             [0,0,0,0,1,1,2,1,1,1,1,2,1,1,0,0,0,0],
             [0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0]]
    light_green = [164,202,57]
    tmp=0
    img_array = np.ones((len(array),len(array[0]), 3),np.uint8)*0
    for clist in [light_green]:
        tmp+=1
        for i in range(len(array)):
            for j in range(len(array)):
                for k in range(3):
                    if array[i][j]==0:
                        img_array[i][j][k] = 0
                    elif array[i][j]==1:
                        img_array[i][j][k] = clist[k]
                    else:
                        img_array[i][j][k] = 255
        fig = plt.figure()
        plt.plot(), plt.imshow(img_array)
        plt.axis("off")
        fig.patch.set_alpha(0)
        plt.savefig('jumping_android{}.png'.format(tmp), dpi = dpi)
        
def create_crouching_android(dpi):
    array = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0],
             [0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
             [0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0],
             [0,0,0,0,1,1,2,1,1,1,1,2,1,1,0,0,0,0],
             [0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
             [0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]
    light_green = [164,202,57]
    tmp=0
    img_array = np.ones((len(array),len(array[0]), 3),np.uint8)*0
    for clist in [light_green]:
        tmp+=1
        for i in range(len(array)):
            for j in range(len(array)):
                for k in range(3):
                    if array[i][j]==0:
                        img_array[i][j][k] = 0
                    elif array[i][j]==1:
                        img_array[i][j][k] = clist[k]
                    else:
                        img_array[i][j][k] = 255
        fig = plt.figure()
        plt.plot(), plt.imshow(img_array)
        plt.axis("off")
        fig.patch.set_alpha(0)
        plt.savefig('crouching_android{}.png'.format(tmp), dpi = dpi)
        
def create_falling_android(dpi):
    array = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
             [0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0],
             [0,0,0,0,1,1,2,1,1,1,1,2,1,1,0,0,0,0],
             [0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
             [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
             [1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1],
             [1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
             [0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0]]
    light_green = [164,202,57]
    tmp=0
    img_array = np.ones((len(array),len(array[0]), 3),np.uint8)*0
    for clist in [light_green]:
        tmp+=1
        for i in range(len(array)):
            for j in range(len(array)):
                for k in range(3):
                    if array[i][j]==0:
                        img_array[i][j][k] = 0
                    elif array[i][j]==1:
                        img_array[i][j][k] = clist[k]
                    else:
                        img_array[i][j][k] = 255
        fig = plt.figure()
        plt.plot(), plt.imshow(img_array)
        plt.axis("off")
        fig.patch.set_alpha(0)
        plt.savefig('falling_android{}.png'.format(tmp), dpi = dpi)